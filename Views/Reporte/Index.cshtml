
@{
    ViewData["Title"] = "Reporte";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
}
@model List<UserModelReport>

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reporte de Tareas</title>
    <script>
        // Definición de initMap en el contexto global
        var map;
        var polygon;

        function initMap() {
            var mapOptions = {
                center: {
                    lat: -17.413161828566164, lng: -66.1584452341309
                },
                zoom: 10
            };
            map = new google.maps.Map(document.getElementById("map"), mapOptions);
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBQVYzLAj0zkPB59vVvC0-RbMX0UFJgVuk&callback=initMap&libraries=places&v=weekly" async></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    
    

</head>
<body>

    <div class="container-fluid mt-4">
        <h2 class="mb-4 text-center">Reporte de Tareas</h2>
        <div class="row">
            <div class="col-md-3">
                <!-- Lista de Supervisores -->
                <div class="list-group mb-3">
                    <h3 class="list-group-item active" style="background-color: #49A078; color: white;">LISTA SUPERVISORES</h3>
                    <select name="supervisorList" id="supervisorList" class="list-group-item form-control">
                        @foreach (var supervisor in Model)
                        {
                            <option value="@supervisor.id">@supervisor.name @supervisor.lastname</option>
                        }
                    </select>
                </div>

                <!-- Filtro por Zona -->
                <div class="list-group mb-3">
                    <h3 class="list-group-item active" style="background-color: #49A078; color: white;">ZONAS</h3>
                    <select name="taskList" id="taskList" class="list-group-item form-control">
                        <!-- Las opciones de zona se añadirán aquí -->
                    </select>
                </div>

                <!-- Filtro por Estado -->
                <div class="list-group">
                    <h3 class="list-group-item active" style="background-color: #49A078; color: white;">ESTADO</h3>
                    <div class="list-group-item">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="Pendiente" id="pendingCheck" disabled>
                            <label class="form-check-label" for="pendingCheck">Pendiente</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="En Proceso" id="inProcessCheck" disabled>
                            <label class="form-check-label" for="inProcessCheck">En Proceso</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="Finalizado" id="finishedCheck" disabled>
                            <label class="form-check-label" for="finishedCheck">Finalizado</label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-9">
                <!-- Mapa -->
                <div id="map" style="width: 100%; height: 420px;"></div>

                <!-- Tabla de Tareas -->
                <div class="table-responsive mt-3">
                    <table class="table" id="tasksTable">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Nombre</th>
                                <th>Descripción</th>
                                <th>Tarea</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody id="tasksTableBody">
                            <!-- Las filas de la tabla se insertarán aquí mediante JavaScript -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <script>
        var allTasks = @Html.Raw(ViewBag.AllTasks);
    </script>
    <script type="text/javascript">
        var map;
        var polygon;
        $(document).ready(function () {
            // Código para cargar las tareas cuando se selecciona un supervisor
            $('#supervisorList').change(function () {
                var supervisorId = $(this).val();
                var tasks = JSON.parse('@Html.Raw(ViewBag.AllTasks)');

                var taskOptions = "<option value=''>Selecciona una tarea</option>";

                if (tasks[supervisorId]) {
                    tasks[supervisorId].forEach(task => {
                        taskOptions += `<option value='${task.Id}'
                                                data-state='${task.Estado}'
                                                data-coordinates='${JSON.stringify(task.Coordenadas)}'
                                                data-colorValue='${task.ColorValue}'>${task.Zona}</option>`;
                    });
                }

                $('#taskList').html(taskOptions);
                // Limpia la tabla y los detalles del color ya que el supervisor cambió
                $('#tasksTable tbody').empty();
                $('#colorDisplay').css('background-color', ''); // Resetea el color
                $('#colorName').text(''); // Resetea el nombre del color
            });

            // Código para mostrar el estado, las coordenadas y el color cuando se selecciona una tarea y actualizar la tabla de tareas
            $('#taskList').change(function () {
                var selectedTaskId = $(this).val();
                var selectedTaskState = $(this).find('option:selected').data('state');
                var coords = $(this).find('option:selected').data('coordinates');
                var selectedTaskColorValue = $(this).find('option:selected').data('colorValue');

                // Actualiza los checkboxes según el estado de la tarea seleccionada
                $('#pendingCheck').prop('checked', selectedTaskState === 'Pendiente');
                $('#inProcessCheck').prop('checked', selectedTaskState === 'En Proceso');
                $('#finishedCheck').prop('checked', selectedTaskState === 'Terminado');
                $('#taskState').val(selectedTaskState);

                // Actualiza la visualización del color
                $('#colorDisplay').css('background-color', selectedTaskColorValue);

                // Actualiza la tabla con las tareas que coinciden con el IDtarea seleccionado
                var allTaskList = JSON.parse('@Html.Raw(ViewBag.TaskList)');
                var matchingTasks = allTaskList.filter(task => task.IDtarea === selectedTaskId);
                var tableBody = $('#tasksTable tbody');
                tableBody.empty();

                // Agrega cada tarea coincidente a la tabla
                let rowNumber = 1;
                matchingTasks.forEach(task => {
                    var newRow = `<tr>
                          <td>${rowNumber++}</td>
                          <td>${task.Nombre}</td>
                          <td>${task.Descripcion}</td>
                          <td>${task.Tarea}</td>
                          <td><button onclick="openTaskDetails('${task.Id}')" class="btn" style="background-color: #49A078; color: white;">Detalles</button></td>
                      </tr>`;
                    tableBody.append(newRow);
                });

                // Dibuja el polígono en el mapa con el color seleccionado
                if (polygon) {
                    polygon.setMap(null); // Elimina el polígono anterior si existe
                }
                if (coords && coords.length > 0) {
                    polygon = new google.maps.Polygon({
                        paths: coords.map(coord => new google.maps.LatLng(coord.Lat, coord.Lng)),
                        strokeColor: selectedTaskColorValue, // Usa el color seleccionado
                        strokeOpacity: 0.8,
                        strokeWeight: 2,
                        fillColor: selectedTaskColorValue, // Usa el color seleccionado
                        fillOpacity: 0.35
                    });
                    polygon.setMap(map);
                }
            });
        });
    </script>

    <script>
        function openTaskDetails(taskId) {
            // Aquí puedes especificar la URL para la acción de detalles de tu controlador
            var url = '@Url.Action("Details", "Reporte")/' + taskId;
            window.location.href = url;
        }
    </script>




</body>
</html>



